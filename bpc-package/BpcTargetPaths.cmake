
function( bpc_set_directory target type configuration )
	string( TOUPPER ${configuration} CONFIGURATION )
	get_target_property( directory ${target} ${type}_OUTPUT_DIRECTORY_${CONFIGURATION} )
	if( NOT directory )
		get_target_property( directory ${target} ${type}_OUTPUT_DIRECTORY )
		if( NOT directory )
			set( directory "${CMAKE_CURRENT_BINARY_DIR}" )
		endif()
		if( MSVC_IDE )
			set( directory "${directory}/${configuration}" )
		endif()
	endif()
	set( directory ${directory} PARENT_SCOPE )
endfunction()

function( bpc_set_name_base target type configuration )
	string( TOUPPER ${configuration} CONFIGURATION )
	get_target_property( base ${target} ${type}_OUTPUT_NAME_${CONFIGURATION} )
	if( NOT base )
		get_target_property( base ${target} ${type}_OUTPUT_NAME )
		if( NOT base )
			get_target_property( base ${target} OUTPUT_NAME_${CONFIGURATION} )
			if( NOT base )
				get_target_property( base ${target} OUTPUT_NAME )
				if( NOT base )
					set( base ${target} )
				endif()
			endif()
		endif()
	endif()
	set( base ${base} PARENT_SCOPE )
endfunction()

function( bpc_set_name_prefix target import )
	get_target_property( prefix ${target} PREFIX )
	if( NOT prefix )
		get_target_property( type ${target} TYPE )
		if( type STREQUAL STATIC_LIBRARY )
			set( prefix ${CMAKE_STATIC_LIBRARY_PREFIX} )
		else()
			if( import )
				set( prefix ${CMAKE_IMPORT_LIBRARY_PREFIX} )
			elseif( type STREQUAL EXECUTABLE )
				set( prefix "" )
			elseif( type STREQUAL MODULE_LIBRARY )
				set( prefix ${CMAKE_SHARED_MODULE_PREFIX} )
			elseif( type STREQUAL SHARED_LIBRARY )
				set( prefix ${CMAKE_SHARED_LIBRARY_PREFIX} )
			else()
				set( prefix "" )
			endif()
		endif()
	endif()
	set( prefix ${prefix} PARENT_SCOPE )
endfunction()

function( bpc_set_name_suffix target import )
	get_target_property( suffix ${target} SUFFIX )
	if( NOT suffix )
		get_target_property( type ${target} TYPE )
		if( type STREQUAL STATIC_LIBRARY )
			set( suffix ${CMAKE_STATIC_LIBRARY_SUFFIX} )
		else()
			if( import )
				set( suffix ${CMAKE_IMPORT_LIBRARY_SUFFIX} )
			elseif( type STREQUAL EXECUTABLE )
				set( suffix ${CMAKE_EXECUTABLE_SUFFIX} )
			elseif( type STREQUAL MODULE_LIBRARY )
				set( suffix ${CMAKE_SHARED_MODULE_SUFFIX} )
			elseif( type STREQUAL SHARED_LIBRARY )
				set( suffix ${CMAKE_SHARED_LIBRARY_SUFFIX} )
			else()
				set( suffix "" )
			endif()
		endif()
	endif()
	set( suffix ${suffix} PARENT_SCOPE )
endfunction()

function( bpc_get_runtime_dir target configuration runtime_dir  )
	get_target_property( type ${target} TYPE )
	
	if( type STREQUAL MODULE_LIBRARY )
		bpc_set_directory( ${target} LIBRARY ${configuration} )
	else()
		bpc_set_directory( ${target} RUNTIME ${configuration} )
	endif()
			
	set( ${runtime_dir} "${directory}" PARENT_SCOPE )
endfunction()

function( bpc_get_runtime_name target configuration runtime_name  )
	get_target_property( type ${target} TYPE )
	
	if( type STREQUAL MODULE_LIBRARY )
		bpc_set_name_base( ${target} LIBRARY ${configuration} )
	else()
		bpc_set_name_base( ${target} RUNTIME ${configuration} )
	endif()
			
	bpc_set_name_prefix( ${target} FALSE )
	bpc_set_name_suffix( ${target} FALSE )
			
	set( ${runtime_name} "${prefix}${base}${suffix}" PARENT_SCOPE )
endfunction()

function( bpc_get_archive_dir target configuration archive_dir  )
	bpc_set_directory( ${target} ARCHIVE ${configuration} )		
	set( ${archive_dir} "${directory}" PARENT_SCOPE )
endfunction()

function( bpc_get_archive_name target configuration archive_name  )
	bpc_set_name_base( ${target} ARCHIVE ${configuration} )
			
	bpc_set_name_prefix( ${target} TRUE )
	bpc_set_name_suffix( ${target} TRUE )
			
	set( ${archive_name} "${prefix}${base}${suffix}" PARENT_SCOPE )
endfunction()

function( bpc_get_symbol_dir target configuration symbol_dir  )
	get_target_property( type ${target} TYPE )
	
	if( type STREQUAL MODULE_LIBRARY )
		bpc_set_directory( ${target} LIBRARY ${configuration} )
	elseif( type STREQUAL STATIC_LIBRARY )
		bpc_set_directory( ${target} ARCHIVE ${configuration} )
	else()
		bpc_set_directory( ${target} RUNTIME ${configuration} )
	endif()
			
	set( ${symbol_dir} "${directory}" PARENT_SCOPE )
endfunction()

function( bpc_get_symbol_name target configuration symbol_name  )
	get_target_property( type ${target} TYPE )
	
	if( type STREQUAL MODULE_LIBRARY )
		bpc_set_name_base( ${target} LIBRARY ${configuration} )
		bpc_set_name_prefix( ${target} FALSE )		
	elseif( type STREQUAL STATIC_LIBRARY )
		bpc_set_name_base( ${target} ARCHIVE ${configuration} )
		bpc_set_name_prefix( ${target} TRUE )		
	else()
		bpc_set_name_base( ${target} RUNTIME ${configuration} )
		bpc_set_name_prefix( ${target} FALSE )		
	endif()
			
	set( ${symbol_name} "${prefix}${base}.pdb" PARENT_SCOPE )
endfunction()

